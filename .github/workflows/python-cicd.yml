# name: CI/CD for STT-TTS Flask Server

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repository
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v3
#         with:
#           python-version: "3.11"

#       - name: Install dependencies
#         run: |
#           pip install -r requirements-scientific.txt
#           pip install -r requirements-utils.txt
#           pip install -r requirements-core.txt
#           pip install -r requirements-openai.txt
#           pip install -r requirements-audio.txt
#           pip install -r requirements-ml.txt
#           pip install -r requirements-server.txt

#       - name: Login to GitHub Container Registry
#         run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

#       - name: Build Docker Image
#         env:
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#           OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
#           FLASK_APP: app.py
#           FLASK_ENV: development
#           DEBUG: true
#           TEMP_FILES_LIFETIME: 3600
#         run: |
#           docker build \
#             --build-arg OPENAI_API_KEY=$OPENAI_API_KEY \
#             --build-arg OPENAI_MODEL=$OPENAI_MODEL \
#             --build-arg FLASK_APP=$FLASK_APP \
#             --build-arg FLASK_ENV=$FLASK_ENV \
#             --build-arg DEBUG=$DEBUG \
#             --build-arg TEMP_FILES_LIFETIME=$TEMP_FILES_LIFETIME \
#             -t ghcr.io/junhyeong9812/fream-stt-tts:latest .

#       - name: Push Docker Image
#         run: |
#           docker push ghcr.io/junhyeong9812/fream-stt-tts:latest

#   # deploy:
#   #   needs: [build-and-push]
#   #   runs-on: ubuntu-latest
#   #   if: github.ref == 'refs/heads/main'
#   #   steps:
#   #     - name: SSH to EC2
#   #       uses: appleboy/ssh-action@v0.1.8
#   #       env:
#   #         OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#   #         OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
#   #         FLASK_APP: app.py
#   #         FLASK_ENV: development
#   #         DEBUG: true
#   #         TEMP_FILES_LIFETIME: 3600
#   #       with:
#   #         host: ${{ secrets.EC2_HOST }}
#   #         username: ${{ secrets.EC2_USER }}
#   #         key: ${{ secrets.EC2_SSH_KEY }}
#   #         envs: OPENAI_API_KEY,OPENAI_MODEL,FLASK_APP,FLASK_ENV,DEBUG,TEMP_FILES_LIFETIME
#   #         script: |
#   #           cd /home/ubuntu/fream-back/docker/prod
#   #           docker-compose -f docker-compose.prod.yml pull stt_tts
#   #           docker-compose -f docker-compose.prod.yml up -d stt_tts
